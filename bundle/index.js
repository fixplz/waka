!function(n){if("object"==typeof exports)module.exports=n();else if("function"==typeof define&&define.amd)define(n);else{var r;"undefined"!=typeof window?r=window:"undefined"!=typeof global?r=global:"undefined"!=typeof self&&(r=self),r.Waka=n()}}(function(){return function n(r,e,o){function t(f,s){if(!e[f]){if(!r[f]){var i="function"==typeof require&&require;if(!s&&i)return i(f,!0);if(a)return a(f,!0);throw new Error("Cannot find module '"+f+"'")}var u=e[f]={exports:{}};r[f][0].call(u.exports,function(n){var e=r[f][1][n];return t(e?e:n)},u,u.exports,n,r,e,o)}return e[f].exports}for(var a="function"==typeof require&&require,f=0;f<o.length;f++)t(o[f]);return t}({1:[function(n,r,e){function o(n,r){function e(n,r){c={name:n,vars:0},p+="_rules."+n+" = function() {\n",s("_A","false"),t(),o(r,"_R"),"Start"==n&&(p+='if(_P.pos < _P.doc.length) _P.error("top");\n'),a(),p+="return _R;\n",p+="}\n"}function o(n,r){function e(){return n.any&&r&&t(n.any)?(o({seq:[{any:n.any}],bind:r}),!0):n.many&&r&&t(n.many)?(o({seq:[{many:n.many}],bind:r}),!0):!1}function t(n){return n.str||n.range||n.seq?!0:n.alt?n.alt.some(t):n.any?t(n.any):n.many?t(n.many):n.opt?t(n.opt):!1}function a(){return n.str?(s(r,"_P.match("+l(n.str)+")"),!0):!1}function b(){if(!n.range)return!1;var e=d();s(e,"_P.cur()"),p+="if("+e+"==null){",p+="_P.adv=false;\n",s(r,"null"),p+="}else{\n",f(r),p+="_P.step(",n.not&&(p+="!(");for(var o=0;o<n.range.length;o++){var t=n.range[o];p+=t.from?l(t.from)+"<="+e+"&&"+e+"<="+l(t.to):l(t.oneof)+".indexOf("+e+")!=-1",o<n.range.length-1&&(p+="||")}return n.not&&(p+=")"),p+=");\n",p+="}\n",!0}function _(){return n.ref?(s(r,"_rules."+n.ref+"()"),!0):!1}function P(){if(!n.seq)return!1;var e=d();p+=e+":{";var t=d();s(t,"_P.pos");for(var a=null,f=0;f<n.seq.length;f++)n.seq[f].anchor&&(a=s(d(),"true")),o(n.seq[f]),f<n.seq.length-1&&(p+="if(!_P.adv) break "+e+";\n");return r&&s(r,"_P.doc.substring("+t+",_P.pos)"),p+="}\n",p+=null==a?"if(!_P.adv) _P.pos="+t+";\n":"if(!_P.adv && "+a+") _P.error("+JSON.stringify(c.name)+");\n",!0}function g(){if(!n.alt)return!1;for(var e=0;e<n.alt.length;e++)e>0&&(p+="if(!_P.adv){ _P.adv=true;\n"),o(n.alt[e],r),e>0&&(p+="}\n");return!0}function q(){if(!n.any)return!1;if(r)var e=u(r),t=i(d());return p+="for(;;) {\n",o(n.any,t),p+="if(!_P.adv) break;\n",r&&(p+=e+".push("+t+");\n"),p+="}; _P.adv=true;\n",!0}function v(){if(!n.many)return!1;if(r)var e=u(r||d()),t=i(d());var a=s(d(),"false");return p+="for(;;) {\n",o(n.many,t),p+="if(!_P.adv) break;\n",r&&(p+=e+".push("+t+");\n"),p+=a+"=true;\n",p+="}; if("+a+") _P.adv=true;\n",!0}function y(){return n.opt?(s(r,"null"),o(n.opt,r),p+="_P.adv=true;\n",!0):!1}function h(){return n.format?(n.of&&o(n.of),p+="if(_P.adv)",s(r,"("+n.format+")"),!0):!1}function x(){if(!n.lookahead)return!1;var e=s(d(),"_P.pos");return o(n.lookahead,r),p+="_P.pos="+e+";\n",n.not&&(p+="_P.adv=!_P.adv;"),!0}function E(){return n.anchor?(p+="_A=true;\n",!0):!1}r=r||n.bind;var w=e()||a()||b()||_()||b()||P()||g()||q()||v()||y()||h()||x()||E();w||m(n)}function t(){r.debug&&(p+='console.log(">'+c.name+'", _P.pos);\n')}function a(){r.debug&&(p+='console.log("<'+c.name+'", _P.adv ? _P.pos : "X");\n')}function f(n){n&&(p+="var "+n+"=")}function s(n,r){return n&&(p+="var "+n+"="),p+=r+";\n",n}function i(n){return p+="var "+n+";\n",n}function u(n){return p+="var "+n+" = [];\n",n}function d(){return"$"+(c.vars++).toString(36)}function l(n){return'"'+n.replace(/(")/g,"\\$1")+'"'}function m(n){throw console.error("Invalid parser AST:",n),new Error("Canceled parser build")}null==r&&(r={});var c,p="'use strict';\n";return p+="var _P={\n",p+="doc:'', pos:0, adv:true,\n",p+="cur: function(){ return _P.doc[_P.pos] },",p+="match: function(str) { if(_P.adv = _P.doc.substr(_P.pos, str.length) == str) { _P.pos += str.length; return str } },\n",p+="step: function(flag) { if(_P.adv = flag) { _P.pos++; return _P.doc[_P.pos-1] } },\n",p+="reset: function(pos) { _P.pos = pos },\n",p+="error: function(rule) { console.error('Unexpected syntax in ' + rule); _P.traceline(_P.pos); throw new Error('Cancel parser') },\n",p+="traceline: function(pos) { var l = _P.doc.lastIndexOf('\\n', pos), r = _P.doc.indexOf('\\n', pos); if(l == -1) l = 0; else l++; if(r == -1) r = pos.length; console.error('Line', _P.doc.substring(0, l).split('\\n').length); console.error(_P.doc.substring(l, r) + '\\n' + '                                                                                                                        '.substr(0, pos - l) + '^^^') },\n",p+="};\n",p+=n.init+";\n",p+="var _rules={};\n",n.rules.forEach(function(n){e(n.name,n.def)}),p+="\n",p+="return {\n",p+="p:_P,\n",p+="parse: function(doc, rule){\n",p+="_P.doc = doc;\n",p+="_P.pos = 0;\n",p+='var res = _rules[rule || "Start"]();\n',p+="return { success:_P.adv, result:res }\n",p+="}\n",p+="}\n"}e.buildParser=o},{}],2:[function(n,r,e){var o=n("./build-parser.js").buildParser,t=Function(o(n("./reader-ast.json")))();e.getRaw=function(n,r){return o(t.parse(n).result,r)},e.getParser=function(n,r){return Function(o(t.parse(n).result,r))()}},{"./build-parser.js":1,"./reader-ast.json":3}],3:[function(n,r){r.exports={rules:[{name:"Start",def:{format:"{rules: rules, init: init,}",of:{seq:[{ref:"sp"},{opt:{ref:"JSEmbed"},bind:"init"},{many:{ref:"Rule"},bind:"rules"}]}}},{name:"Rule",def:{format:"{name: name, def: def}",of:{seq:[{ref:"RuleHead",bind:"name"},{ref:"eq"},{anchor:!0},{ref:"Expr",bind:"def"},{ref:"semi"}]}}},{name:"RuleHead",def:{format:"n",of:{seq:[{ref:"word",bind:"n"},{ref:"sp"}]}}},{name:"Expr",def:{format:"r",of:{seq:[{ref:"ExprAction",bind:"left"},{alt:[{format:"{alt: [left].concat(tail)}",of:{many:{format:"e",of:{seq:[{ref:"slash"},{ref:"ExprAction",bind:"e"}]}},bind:"tail"}},{format:"left"}],bind:"r"}]}}},{name:"ExprAction",def:{format:"r",of:{seq:[{opt:{ref:"ExprSeq"},bind:"body"},{alt:[{format:"{format: isobj ? '{' + format.trim() + '}' : format.trim(),\n      of: body}",of:{seq:[{ref:"JSIsObj",bind:"isobj"},{ref:"JSEmbed",bind:"format"}]}},{format:"body"}],bind:"r"}]}}},{name:"ExprSeq",def:{format:"asSeq(atoms)",of:{many:{ref:"ExprAtom"},bind:"atoms"}}},{name:"ExprAtom",def:{alt:[{format:"atom(bind, expr, op)",of:{seq:[{opt:{format:"n",of:{seq:[{ref:"word",bind:"n"},{ref:"col"}]}},bind:"bind"},{alt:[{ref:"Ref"},{ref:"Range"},{ref:"Literal"},{ref:"ExprParens"}],bind:"expr"},{opt:{range:[{oneof:"?*+"}],not:!1},bind:"op"},{ref:"sp"}]}},{format:"{lookahead: expr, not: op == '!'}",of:{seq:[{range:[{oneof:"&!"}],not:!1,bind:"op"},{alt:[{ref:"Ref"},{ref:"Range"},{ref:"Literal"},{ref:"ExprParens"}],bind:"expr"},{ref:"sp"}]}},{format:"{anchor: true}",of:{seq:[{str:"%anc"},{ref:"sp"}]}}]}},{name:"Ref",def:{format:"{ref: n}",of:{ref:"word",bind:"n"}}},{name:"Literal",def:{format:"{str: s}",of:{ref:"str",bind:"s"}}},{name:"ExprParens",def:{format:"e",of:{seq:[{str:"("},{ref:"sp"},{anchor:!0},{ref:"Expr",bind:"e"},{str:")"}]}}},{name:"Range",def:{format:"{range: rs, not: not == '^'}",of:{seq:[{str:"["},{anchor:!0},{opt:{str:"^"},bind:"not"},{ref:"sp"},{any:{alt:[{format:"{from: from, to: to}",of:{seq:[{ref:"rangechar",bind:"from"},{str:"-"},{ref:"rangechar",bind:"to"},{ref:"sp"}]}},{format:"{oneof: cat(chars)}",of:{many:{format:"cat(c)",of:{seq:[{many:{ref:"rangechar"},bind:"c"},{ref:"sp"}]}},bind:"chars"}}]},bind:"rs"},{str:"]"}]}}},{name:"rangechar",def:{alt:[{seq:[{str:"\\\\"},{ref:"any"}]},{range:[{oneof:"\\[\\]\\ \\^"}],not:!0}]}},{name:"JSEmbed",def:{format:"e",of:{seq:[{str:"{"},{ref:"embed",bind:"e"},{str:"}"},{ref:"sp"}]}}},{name:"JSIsObj",def:{alt:[{format:"true",of:{lookahead:{seq:[{str:"{"},{ref:"sp"},{ref:"word"},{any:{str:" "}},{ref:"col"}]},not:!1}},{format:"false"}]}},{name:"word",def:{seq:[{range:[{from:"a",to:"z"},{from:"A",to:"Z"},{oneof:"_"}],not:!1},{any:{range:[{from:"a",to:"z"},{from:"A",to:"Z"},{from:"0",to:"9"},{oneof:"_"}],not:!1}}]}},{name:"str",def:{alt:[{format:"x",of:{seq:[{range:[{oneof:'"'}],not:!1},{any:{alt:[{seq:[{str:"\\\\"},{ref:"any"}]},{range:[{oneof:'"'}],not:!0}]},bind:"x"},{range:[{oneof:'"'}],not:!1}]}},{format:"x",of:{seq:[{range:[{oneof:"'"}],not:!1},{any:{alt:[{seq:[{str:"\\\\"},{ref:"any"}]},{range:[{oneof:"'"}],not:!0}]},bind:"x"},{range:[{oneof:"'"}],not:!1}]}}]}},{name:"embed",def:{seq:[{any:{range:[{oneof:"{}\"'"}],not:!0}},{any:{seq:[{alt:[{seq:[{str:"{"},{ref:"embed"},{str:"}"}]},{ref:"str"}]},{any:{range:[{oneof:"{}\"'"}],not:!0}}]}}]}},{name:"eq",def:{seq:[{str:"="},{ref:"sp"}]}},{name:"slash",def:{seq:[{str:"/"},{ref:"sp"}]}},{name:"semi",def:{seq:[{str:";"},{ref:"sp"}]}},{name:"col",def:{seq:[{str:":"},{ref:"sp"}]}},{name:"any",def:{format:"_P.step(true)"}},{name:"sp",def:{any:{alt:[{many:{range:[{oneof:"\\r\\n\\ "}],not:!1}},{seq:[{str:"//"},{any:{range:[{oneof:"\\n"}],not:!0}},{str:"\\n"}]}]}}}],init:"\n  function asSeq(atoms) {\n    if(atoms.length > 1) return { seq: atoms }\n    return atoms[0]\n  }\n  function atom(bind, expr, op) {\n    var el =\n      op == '+' ? { many: expr }\n      : op == '*' ? { any: expr }\n      : op == '?' ? { opt: expr }\n      : expr\n    if(bind) el.bind = bind\n    return el\n  }\n  function cat(arr) {\n    return arr.join('')\n  }\n"}},{}]},{},[2])(2)});